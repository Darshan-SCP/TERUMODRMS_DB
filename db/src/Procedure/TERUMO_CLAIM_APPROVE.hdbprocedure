PROCEDURE "TERUMODRMS_DB.db.Procedure::TERUMO_CLAIM_APPROVE"( 
	IN CR_NO BIGINT,
	IN BU_CODE NVARCHAR(50),
	IN BU_SUB_CODE NVARCHAR(100),
	IN USER_ID NVARCHAR(100),
	IN APPROVER_LEVEL INTEGER,
	IN CURR_APPROVER_ROLE NVARCHAR(50),
	IN SAP_CREDIT_NOTE NVARCHAR(10),
	--Change Request 21.02.2022 KAustubh (Add entries for TP and SAP Credit note amount)
	IN CAS_NO NVARCHAR(50),
	IN UTID_NO NVARCHAR(50),
	IN SAP_CREDIT_NOTE_AMOUNT DOUBLE,
	IN SAP_CREDIT_NOTE_DATE DATE,
	-----------------
	IN ST_ITEMS "TERUMODRMS_DB.db.Structure::ST_TERUMO_CLAIM_ITEMS",
	IN ST_ATTACH "TERUMODRMS_DB.db.Structure::ST_TERUMO_CLAIM_ATTACHMENTS",
	IN ST_EVENTS "TERUMODRMS_DB.db.Structure::ST_TERUMO_CLAIM_EVENTS_COMMENTS",
	IN APPROVE_TYPE NVARCHAR(10),
	OUT OUT_SUCCESS NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE CURR_TIMESTAMP TIMESTAMP;
	DECLARE DIST_ID NVARCHAR(100);
	DECLARE STATUS INTEGER;
	DECLARE INFO_CHECK BOOLEAN := FALSE;
	-- Next Approver details
	DECLARE NEXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE NEXT_APPROVER_LEVEL INTEGER;
	DECLARE NEXT_APPROVER NVARCHAR(100);
	-- Event Values
	DECLARE EVENT_COUNT INTEGER;
	DECLARE EVENT_NO INTEGER;
	DECLARE EVENT_CODE NVARCHAR(30);
	DECLARE REMARK NVARCHAR(100); 
	
	-- Get current timestamp
	SELECT CURRENT_TIMESTAMP INTO CURR_TIMESTAMP FROM "TERUMODRMS_DB.db::DUMMY";
	
	NEXT_APPROVER_LEVEL := :APPROVER_LEVEL + 1;
	
	-- Get Next Approver Role from Approver level
	IF :APPROVER_LEVEL BETWEEN 1 AND 6
	THEN
		SELECT "USER_ROLE" INTO NEXT_APPROVER_ROLE FROM "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_MATRIX"
		WHERE "APPROVER_LEVEL" = :NEXT_APPROVER_LEVEL;
	END IF;
	
	-- Get DIST_ID from Claim Header
	IF :APPROVER_LEVEL BETWEEN 1 AND 3
	THEN
		SELECT "DISTRIBUTOR_ID" INTO DIST_ID FROM "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_HEADER"
		WHERE "CR_NO" = :CR_NO;
	END IF;
	
	-- Get Count for new EVENT_NO
	SELECT COUNT(*) into EVENT_COUNT FROM "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_EVENTS_COMMENTS" 
	WHERE "CR_NO" = :CR_NO;
	
	EVENT_NO := EVENT_COUNT + 1;
	EVENT_CODE := 2; -- Claim Request Approved
	STATUS := 6; --Pending for Approval
	
	
	IF :CURR_APPROVER_ROLE = 'SA' -- Approval by Sales Associate
	THEN
		-- Get Sales Manager id as Next Approver
		SELECT "SALES_MGR_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_SALESHIERARCHY_MATRIX"
		WHERE "BU_SUB_CODE" = :BU_SUB_CODE AND "BU_CODE" = :BU_CODE AND "DISTRIBUTOR_ID" = :DIST_ID;
		INFO_CHECK := TRUE;
	
	END IF;
	
    --Logic change for blank approvers for SA,SM and RH 03.11.2021
	IF (:CURR_APPROVER_ROLE = 'SA' AND  NEXT_APPROVER = '')-- GET RH since no SM
	THEN
		-- Get Regional Head as Next Approver
		SELECT "SALES_REGIONALHEAD_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_SALESHIERARCHY_MATRIX"
		WHERE "DISTRIBUTOR_ID" = :DIST_ID AND "BU_SUB_CODE" = :BU_SUB_CODE LIMIT 1;
		NEXT_APPROVER_LEVEL = NEXT_APPROVER_LEVEL + 1;
		NEXT_APPROVER_ROLE = 'RH';
		INFO_CHECK := TRUE;
	END IF;
	
	IF (:CURR_APPROVER_ROLE = 'SA' AND  NEXT_APPROVER = '' AND NEXT_APPROVER_ROLE = 'RH')-- Push to BU Head as no RH
	THEN
		-- Get BU Head as Next Approver
	   SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
       WHERE "USER_ROLE" = 'TP' LIMIT 1;
       NEXT_APPROVER_ROLE = 'TP';
       NEXT_APPROVER_LEVEL = NEXT_APPROVER_LEVEL + 1;
	   INFO_CHECK := TRUE;
	END IF;
	
	
	
	IF :CURR_APPROVER_ROLE = 'SM'  -- Approval by Sales Manager
	THEN
		
		-- Get Sales Regional Head id as Next Approver
		SELECT "SALES_REGIONALHEAD_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_SALESHIERARCHY_MATRIX"
		WHERE "BU_SUB_CODE" = :BU_SUB_CODE AND "BU_CODE" = :BU_CODE AND "DISTRIBUTOR_ID" = :DIST_ID;
		INFO_CHECK := TRUE;
	
	END IF;	
	
	--Logic change for blank approvers for SA,SM and RH 03.11.2021
	IF (:CURR_APPROVER_ROLE = 'SM' AND  NEXT_APPROVER = '')-- GET TP since no RH
	THEN
		-- Get Third Party as Next Approver
		SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
        WHERE "USER_ROLE" = 'TP' LIMIT 1;
        NEXT_APPROVER_ROLE = 'TP';
        NEXT_APPROVER_LEVEL = NEXT_APPROVER_LEVEL + 1;
		INFO_CHECK := TRUE;
	END IF;
		
	IF :CURR_APPROVER_ROLE = 'RH' -- Approval by Sales Regional Head
	THEN
	
		-- Get Third Party id as Next Approver
		SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
		WHERE "USER_ROLE" = :NEXT_APPROVER_ROLE;--'TP';
		INFO_CHECK := TRUE;
	
	END IF;	
		
	IF :CURR_APPROVER_ROLE = 'TP' AND :APPROVER_LEVEL = 4  -- Approval by Third Party
	THEN
	
		-- Get Finance Director id as Next Approver 
		SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
		WHERE "USER_ROLE" = :NEXT_APPROVER_ROLE;--'FD';
		
		UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_HEADER"
		SET 
			"UTID_NO" = :UTID_NO
		WHERE "CR_NO" = :CR_NO;
		
		-- Insert Only third party Attachments:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_ATTACHMENTS" 
		(
			"CR_NO", "ATTACH_CODE", "FILE_ID", "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOAD_DATE" 
		)
		SELECT 	:CR_NO, "ATTACH_CODE", "FILE_ID", "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", :CURR_TIMESTAMP 
		FROM :ST_ATTACH;
		
		
		IF :APPROVE_TYPE = 'Partial'
		THEN
			EVENT_CODE := 6; -- Claim Request Partially Approved
			STATUS := 23; -- Partially Approved by TP
			REMARK := 'Partially Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
			OUT_SUCCESS := 'CR Partially Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		ELSE
			REMARK := 'Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
			OUT_SUCCESS := 'CR Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		END IF;
		
		INFO_CHECK := TRUE;
		
	ELSEIF :CURR_APPROVER_ROLE = 'FD' -- Approval by Finance Director
	THEN
		
		-- Get Business Unit Head id as Next Approver
		SELECT "BU_HEAD_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_BUSINESS_UNIT_MASTER"
		WHERE "BU_CODE" = :BU_CODE;
		
		
		REMARK := 'Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		OUT_SUCCESS := 'CR Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		INFO_CHECK := TRUE;
		
	ELSEIF :CURR_APPROVER_ROLE = 'BUH' -- Approval by Business Director
	THEN
		
		-- Get Third Party id as Next Approver
		SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
		WHERE "USER_ROLE" = :NEXT_APPROVER_ROLE;--'TP';
		
		
		REMARK := 'Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		OUT_SUCCESS := 'CR Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		INFO_CHECK := TRUE;
		
	ELSEIF :CURR_APPROVER_ROLE = 'TP' AND :APPROVER_LEVEL = 7  -- Approval by Third Party
	THEN
	
		NEXT_APPROVER := '';
		NEXT_APPROVER_ROLE := '';
		
		EVENT_CODE := 4; --Credit Note Created in SAP
		STATUS := 19; --Credit Note Created
	
		REMARK := 'Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		OUT_SUCCESS := 'Claim Request: ' || :SAP_CREDIT_NOTE || ' Completed'; 
		INFO_CHECK := TRUE;
		

	ELSE
		OUT_SUCCESS := 'Invalid Claim Request Approver';
    END IF;
		
   
   
    -- Update & Insert only when INFO_CHECK is TRUE
    IF :INFO_CHECK = TRUE AND :CURR_APPROVER_ROLE = 'TP' AND :APPROVER_LEVEL = 4
    THEN
    
        --Change Request 21.02.2022 KAustubh (Add entries for TP and SAP Credit note amount)
	    UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_HEADER"
		SET "APPROVER_LEVEL" = :NEXT_APPROVER_LEVEL, "NEXT_APPROVER"= :NEXT_APPROVER, "APPROVER_ROLE" = :NEXT_APPROVER_ROLE, 
			"STATUS" = :STATUS, "LAST_UPDATED" = :CURR_TIMESTAMP, "SAP_CREDIT_NOTE" = :SAP_CREDIT_NOTE,
			"UTID_NO" = :UTID_NO , "SAP_CREDIT_NOTE_AMOUNT" = :SAP_CREDIT_NOTE_AMOUNT, "SAP_CREDIT_NOTE_DATE" = :SAP_CREDIT_NOTE_DATE
		WHERE "CR_NO" = :CR_NO;
		
		-- 2) Delete all existing items for the CR_NO:
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_ITEMS" 
		WHERE "CR_NO" = :CR_NO;
		
		 -- 3) Insert into Items Table:
		 --Change Request 21.02.2022 KAustubh (Add entries for TP and SAP Credit note amount)
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_ITEMS" 
		(
			"CR_NO", "ITEM_NO", "ITEM_CODE", "HOSPITAL_CODE", "INVOICE_NO", "INVOICE_DATE", 
			"INVOICE_QUANTITY", "INVOICE_RATE", "REQUESTED_RATE", "REQUESTED_QUANTITY", "REQUESTED_AMOUNT",
			"PROCESSSED_RATE", "PROCESSSED_QUANTITY", "PROCESSSED_AMOUNT",
			"DIST_INVOICE" , "SEC_SALES_DATE", "SEC_SALES_MONTH" ,"PRIM_INVOICE_MONTH","HOSP_ACK" ,"PHYS_NAME" ,"PATIENT_NAME" ,
		    "PRODUCT_STICKER"
		)
		SELECT 	:CR_NO, "ITEM_NO", "ITEM_CODE", "HOSPITAL_CODE", "INVOICE_NO", "INVOICE_DATE", 
			"INVOICE_QUANTITY", "INVOICE_RATE", "REQUESTED_RATE", "REQUESTED_QUANTITY", "REQUESTED_AMOUNT",
			"PROCESSSED_RATE", "PROCESSSED_QUANTITY", "PROCESSSED_AMOUNT",
			"DIST_INVOICE" , "SEC_SALES_DATE", "SEC_SALES_MONTH" ,"PRIM_INVOICE_MONTH","HOSP_ACK" ,"PHYS_NAME" ,"PATIENT_NAME" ,
		    "PRODUCT_STICKER"
		FROM :ST_ITEMS;
		COMMIT;
	
		-- 4) Insert into Events Log:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_EVENTS_COMMENTS" 
		(
			"CR_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "USER_ROLE", "REMARK", "COMMENT", "CREATION_DATE"
		)
		SELECT 	:CR_NO, :EVENT_NO, :EVENT_CODE, "USER_ID", "USER_NAME", "USER_ROLE", :REMARK, "COMMENT", :CURR_TIMESTAMP
		FROM :ST_EVENTS;
		COMMIT;
    
    
    
    ELSEIF :INFO_CHECK = TRUE
	THEN
	   REMARK := 'Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
	
		-- 1) Update into Header:
		--Change Request 21.02.2022 KAustubh (Add entries for TP and SAP Credit note amount)
		UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_HEADER"
		SET "APPROVER_LEVEL" = :NEXT_APPROVER_LEVEL, 
			"NEXT_APPROVER"= :NEXT_APPROVER, 
			"APPROVER_ROLE" = :NEXT_APPROVER_ROLE, 
			"STATUS" = :STATUS, 
			"LAST_UPDATED" = :CURR_TIMESTAMP, 
			"SAP_CREDIT_NOTE" = :SAP_CREDIT_NOTE,
			"SAP_CREDIT_NOTE_AMOUNT" = :SAP_CREDIT_NOTE_AMOUNT,
			"SAP_CREDIT_NOTE_DATE" = :SAP_CREDIT_NOTE_DATE
		WHERE "CR_NO" = :CR_NO;
	
		-- 2) Insert into Events Log:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_CLAIM_EVENTS_COMMENTS" 
		(
			"CR_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "USER_ROLE", "REMARK", "COMMENT", "CREATION_DATE"
		)
		SELECT 	:CR_NO, :EVENT_NO, :EVENT_CODE, "USER_ID", "USER_NAME", "USER_ROLE", :REMARK, "COMMENT", :CURR_TIMESTAMP
		FROM :ST_EVENTS;
		COMMIT;
		
		IF :APPROVER_LEVEL != 7
		THEN
		OUT_SUCCESS := 'CR Approved by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
		END IF;
		
	END IF;
   
END