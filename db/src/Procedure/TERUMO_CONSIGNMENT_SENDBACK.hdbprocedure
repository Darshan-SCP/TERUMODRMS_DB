PROCEDURE "TERUMODRMS_DB.db.Procedure::TERUMO_CONSIGNMENT_SENDBACK"(
	IN LV_PR_NO BIGINT,
	IN BU_CODE NVARCHAR(10),
	IN CURR_APRROVER_ROLE NVARCHAR(10),
    IN ST_PR_EVENTSCOMMS "TERUMODRMS_DB.db.Structure::ST_TERUMO_PR_EVENTS_COMMENTS",
	OUT OUT_SUCCESS VARCHAR(100)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   -- Local Variables:
	DECLARE LV_DATE TIMESTAMP;
	DECLARE STATUS NVARCHAR(10);
	
DECLARE EXIT HANDLER FOR SQLEXCEPTION SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM "TERUMODRMS_DB.db::DUMMY";
/*DECLARE DEFAULT_FTYPE VARCHAR(100);*/
SELECT CURRENT_TIMESTAMP INTO LV_DATE FROM "TERUMODRMS_DB.db::DUMMY";
	
	
	
	IF :CURR_APRROVER_ROLE = 'SA'
	THEN
	STATUS = '15'; --Sent Back by SA
	END IF;
	IF :CURR_APRROVER_ROLE = 'SM'
    THEN
	STATUS = '36'; --Sent Back by SM
	END IF;
	IF :CURR_APRROVER_ROLE = 'RH'
    THEN
	STATUS = '37'; --Sent Back by RH
	END IF;
	
	UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_PR_HEADER"
		SET "APPROVER_LEVEL" = null, 
		    "NEXT_APPROVER"= '', 
		    "APPROVER_ROLE" = '', 
			"PR_STATUS" = :STATUS, 
			"LAST_UPDATED_DATE" = :LV_DATE
		WHERE "PR_NO" = :LV_PR_NO;
	
       -- For Events and Comments Table
INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_PR_EVENTS_COMMENTS" 
("PR_NO","EVENT_NO","EVENT_CODE","USER_ID","USER_ROLE","USER_NAME","COMMENTS","CRT_DATE"
)
SELECT 
:LV_PR_NO,"EVENT_NO","EVENT_CODE","USER_ID","USER_ROLE","USER_NAME","COMMENTS","CRT_DATE"
FROM :ST_PR_EVENTSCOMMS;
COMMIT;

OUT_SUCCESS := 'Purchase Request with ID ' || :LV_PR_NO || ' sent back to Distributor.';

-- ELSE
--      OUT_SUCCESS := 'Request could not be completed';
-- END IF;		
	
END