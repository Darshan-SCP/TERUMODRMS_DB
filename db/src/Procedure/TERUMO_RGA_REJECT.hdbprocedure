PROCEDURE "TERUMODRMS_DB.db.Procedure::TERUMO_RGA_REJECT"(
	IN RGA_NO BIGINT,
	IN USER_ID NVARCHAR(100),
	IN APPROVER_LEVEL INTEGER,
	IN ST_EVENTS "TERUMODRMS_DB.db.Structure::ST_TERUMO_RGA_EVENTS_COMMENTS",
	OUT OUT_SUCCESS VARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   -- Local Variables:
	DECLARE CURR_TIMESTAMP TIMESTAMP;
	DECLARE STATUS INTEGER;
	DECLARE CURR_APPROVER_ROLE NVARCHAR(50);
	DECLARE NEXT_APPROVER NVARCHAR(100);
	DECLARE NEXT_APPROVER_ROLE NVARCHAR(50);
	-- Event Values
	DECLARE EVENT_COUNT INTEGER;
	DECLARE EVENT_NO INTEGER;
	DECLARE EVENT_CODE NVARCHAR(30);
	DECLARE REMARK NVARCHAR(100);
	

	-- Get current timestamp
	SELECT CURRENT_TIMESTAMP INTO CURR_TIMESTAMP FROM "TERUMODRMS_DB.db::DUMMY";
	
	-- Get Current Approver Role from Approver level
	SELECT "USER_ROLE" INTO CURR_APPROVER_ROLE FROM "TERUMODRMS_DB.db.Tables::TERUMO_RGA_MATRIX"
	WHERE "APPROVER_LEVEL" = :APPROVER_LEVEL;
	
	-- Rejected by all except Sales Associate
	IF :CURR_APPROVER_ROLE != 'SA' AND (:APPROVER_LEVEL BETWEEN 2 AND 6)
	THEN
	
		EVENT_CODE := 3; --RGA Request Rejected
		STATUS := 16; --Return Request Rejected
		NEXT_APPROVER := ''; -- Send Next Approver as Blank for Final approval
		NEXT_APPROVER_ROLE := '';
		
	
		SELECT COUNT(*) into EVENT_COUNT FROM "TERUMODRMS_DB.db.Tables::TERUMO_RGA_EVENTS_COMMENTS" WHERE "RGA_NO" = :RGA_NO;
		EVENT_NO := EVENT_COUNT + 1;
		REMARK := 'Rejected by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
	
	-- 1) Update into Header:
		UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_RGA_HEADER"
		SET "NEXT_APPROVER"= :NEXT_APPROVER, "APPROVER_ROLE" = :NEXT_APPROVER_ROLE, 
			"STATUS" = :STATUS
		WHERE "RGA_NO" = :RGA_NO;
		
   
	-- 2) Insert into Events Log:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_RGA_EVENTS_COMMENTS" 
		(
			"RGA_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "USER_ROLE", "REMARK", "COMMENT", "CREATION_DATE"
		)
		SELECT 	:RGA_NO, :EVENT_NO, :EVENT_CODE, "USER_ID", "USER_NAME", "USER_ROLE", :REMARK, "COMMENT", :CURR_TIMESTAMP
		FROM :ST_EVENTS;
		COMMIT;
		
		OUT_SUCCESS := 'RGA Request Rejected by ' || :CURR_APPROVER_ROLE || ' - ' || :USER_ID;
	
	ELSE
		OUT_SUCCESS := 'User Cannot Reject';
	END IF;
		
END