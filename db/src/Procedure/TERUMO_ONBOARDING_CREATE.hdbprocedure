PROCEDURE "TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_CREATE"(
	IN OB_NO BIGINT,
	IN STEP_NO INTEGER,
	IN USER_ID NVARCHAR(100),
	IN SALES_ASSOCIATE_ID NVARCHAR(100),
	-- IN DIST_NAME NVARCHAR(50),
	-- IN DIST_PHONE NVARCHAR(10),
	-- IN DIST_ADDR NVARCHAR(200),
	IN ST_MAIN "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_ONBOARDING",
	IN ST_ADDR "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_ADDRESS",
	IN ST_BR_WH "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_BRANCH_SISTER_WH",
	IN ST_ATTACH "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_ATTACHMENTS",
	IN ST_CUST "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_CUSTOMERS",
	IN ST_BANK "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_BANK_DETAIL",
	IN ST_PROMNG "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_PROMOTER_MANAGEMENT",
	IN ST_HISTORY "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_BUSINESS_HISTORY",
	IN ST_EVENTS "TERUMODRMS_DB.db.Structure::ST_TERUMO_DISTRIBUTOR_EVENTS_COMMENTS",
	OUT OUT_SUCCESS NVARCHAR(100)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	-- DECLARE OB_NO BIGINT;
	DECLARE CURR_TIMESTAMP TIMESTAMP;
	DECLARE BU_CODE NVARCHAR(50);
	-- DECLARE BU_SUB_CODE NVARCHAR(50);
	
	DECLARE STATUS INTEGER;
	DECLARE APPROVER_LEVEL INTEGER;
	DECLARE APPROVER_ROLE NVARCHAR(50);
	DECLARE NEXT_APPROVER NVARCHAR(100);
	-- Event Values
	DECLARE EVENT_COUNT NVARCHAR(50);
	DECLARE EVENT_NO INTEGER;
	DECLARE EVENT_CODE NVARCHAR(30);
	DECLARE REMARK NVARCHAR(100); 
	
   -- Local Variable values assigning
		IF :OB_NO = 0
		THEN
			SELECT "TERUMODRMS_DB.db.Sequence::TERUMO_ONBOARDING_NO".NEXTVAL INTO OB_NO FROM "TERUMODRMS_DB.db::DUMMY";
		END IF;
		
		SELECT CURRENT_TIMESTAMP INTO CURR_TIMESTAMP FROM "TERUMODRMS_DB.db::DUMMY";
		
		STATUS := 6; --Pending for Approval
		APPROVER_LEVEL := 1; --SA
		APPROVER_ROLE := 'SA'; --SA
		NEXT_APPROVER := :SALES_ASSOCIATE_ID;
		-- STEP_NO := 0;
		
		SELECT "BU_CODE" INTO BU_CODE FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
		WHERE "USER_ID" = :SALES_ASSOCIATE_ID AND "USER_ROLE" = :APPROVER_ROLE;
		
		--Get next User id from User Master
		-- SELECT "USER_ID" INTO NEXT_APPROVER FROM "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER"
		-- WHERE "USER_ROLE" = :APPROVER_ROLE
		-- LIMIT 1; -- Limit to 1 for testing purpose
		
		
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ONBOARDING" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ADDRESS" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BRANCH_SISTER_WH" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ATTACHMENTS" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BUSINESS_HISTORY" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_CUSTOMERS" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BANK_DETAIL" WHERE "OB_NO" = :OB_NO;
		DELETE FROM "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_PROMOTER_MANAGEMENT" WHERE "OB_NO" = :OB_NO;
	
		 -- 1) Insert into Main Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ONBOARDING" 
		(
			"OB_NO", "STATUS", "APPROVER_LEVEL", "APPROVER_ROLE", "NEXT_APPROVER", "BU_CODE", "SAP_DIST_NO", "PROPOSAL_DATE", "ENTITY_NAME", 
			"BUSINESS_NATURE", "CONTACT_NAME", "CONTACT_MOBILE", "CONTACT_EMAIL", "REGISTERED_ADDR", "OFFICE_ADDR", "SHIP_TO_ADDR", "WAREHOUSE_ADDR", 
			"ESTABLISMENT_DATE", "TERR_HOSP_ACC", "SELLING_POINT", "TOT_PERM_EMP", "TOT_TEMP_EMP", "NOE_ACC", "NOE_ADM", "NOE_HR", "NOE_QA", 
			"NOE_MAN", "NOE_SAL", "NOE_SEC", "NOE_ANY", "SALES_ASSOCIATE_ID", "CREATED_ON", "SAVED_AS_DRAFT"
		)
		SELECT 	:OB_NO, :STATUS, :APPROVER_LEVEL, :APPROVER_ROLE, :NEXT_APPROVER, :BU_CODE, "SAP_DIST_NO", "PROPOSAL_DATE", "ENTITY_NAME", 
			"BUSINESS_NATURE", "CONTACT_NAME", "CONTACT_MOBILE", "CONTACT_EMAIL", "REGISTERED_ADDR", "OFFICE_ADDR", "SHIP_TO_ADDR", "WAREHOUSE_ADDR", 
			"ESTABLISMENT_DATE", "TERR_HOSP_ACC", "SELLING_POINT", "TOT_PERM_EMP", "TOT_TEMP_EMP", "NOE_ACC", "NOE_ADM", "NOE_HR", "NOE_QA", 
			"NOE_MAN", "NOE_SAL", "NOE_SEC", "NOE_ANY", :SALES_ASSOCIATE_ID, :CURR_TIMESTAMP, :STEP_NO
		FROM :ST_MAIN;
		
		
		 -- 2) Insert into Address Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ADDRESS" 
		(
			"OB_NO", "ADDR_CODE", "ADDR_NO", "STREETNO", "STREET1", "STREET2", "CITY", "STATE", 
			"COUNTRY", "PINCODE", "STATE_DESCRIPTION", "COUNTRY_DESCRIPTION"
		)
		SELECT 	:OB_NO,  "ADDR_CODE", "ADDR_NO", "STREETNO", "STREET1", "STREET2", "CITY", "STATE", 
			"COUNTRY", "PINCODE", "STATE_DESCRIPTION", "COUNTRY_DESCRIPTION"
		FROM :ST_ADDR;
		COMMIT;
		
		-- 3) Insert into Branch & Warehouse Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BRANCH_SISTER_WH" 
		(
			"OB_NO", "LOC_NO", "LOC_TYPE", "BR_WH_NO", "ADDR_CODE",
			"CONTACT_NO", "EMAIL_ID", "PROPERTY_TYPE", "CONCERN_TYPE", "INFRA_DETAIL", "TEMP_DETAIL", "ON_LEASE", 
			"ATTACH_CODE", "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOAD_DATE",
			"STREETNO", "STREET1", "STREET2", "CITY", "STATE", "COUNTRY", "PINCODE", "STATE_DESCRIPTION", "COUNTRY_DESCRIPTION"
		)
		SELECT 	:OB_NO, "LOC_NO", "LOC_TYPE", "BR_WH_NO", "ADDR_CODE",
			"CONTACT_NO", "EMAIL_ID", "PROPERTY_TYPE", "CONCERN_TYPE", "INFRA_DETAIL", "TEMP_DETAIL", "ON_LEASE", 
			"ATTACH_CODE", "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", :CURR_TIMESTAMP,
			"STREETNO", "STREET1", "STREET2", "CITY", "STATE", "COUNTRY", "PINCODE", "STATE_DESCRIPTION", "COUNTRY_DESCRIPTION"
		FROM :ST_BR_WH;
		COMMIT;
		
		-- 4) Insert into Attachment Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ATTACHMENTS" 
		(
			"OB_NO", "ATTACH_NO", "ATTACH_CODE", "ATTACH_FIELD", "FILE_NAME", "FILE_TYPE", 
			"FILE_MIMETYPE", "FILE_CONTENT", "UPLOAD_DATE"
		)
		SELECT 	:OB_NO, "ATTACH_NO", "ATTACH_CODE", "ATTACH_FIELD", "FILE_NAME", "FILE_TYPE", 
			"FILE_MIMETYPE", "FILE_CONTENT", :CURR_TIMESTAMP 
		FROM :ST_ATTACH;
		COMMIT;

		-- 5) Insert into Customers Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_CUSTOMERS" 
		(
			"OB_NO", "CUST_NO", "CUSTOMER_NAME", "YEAR1", "YEAR2"
		)
		SELECT 	:OB_NO, "CUST_NO", "CUSTOMER_NAME", "YEAR1", "YEAR2"
		FROM :ST_CUST;
		COMMIT;
		
		-- 6) Insert into Customers Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BANK_DETAIL" 
		(
			"OB_NO", "BANK_NO", "BANK_NAME", "BRANCH", "FACILTY", "AMOUNT_LIMIT", "ASSO_SINCE"
		)
		SELECT 	:OB_NO, "BANK_NO", "BANK_NAME", "BRANCH", "FACILTY", "AMOUNT_LIMIT", "ASSO_SINCE"
		FROM :ST_BANK;
		COMMIT;
		
		-- 7) Insert into Promoter & Management Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_PROMOTER_MANAGEMENT" 
		(
			"OB_NO", "SR_NO", "NAME", "QUALIFICATION", "WORK_EXP", "YRS_IN_COMP", "DESIGNATION", "ROLE"
		)
		SELECT 	:OB_NO, "SR_NO", "NAME", "QUALIFICATION", "WORK_EXP", "YRS_IN_COMP", "DESIGNATION", "ROLE"
		FROM :ST_PROMNG;
		COMMIT;
		
		-- 8) Insert into Customers Table:
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_BUSINESS_HISTORY" 
		(
			"OB_NO", "SR_NO", "DEALERSHIP", "SUPPLIER_NAME", "SINCE", "PROD_GROUP", "PURCHASES"
		)
		SELECT 	:OB_NO, "SR_NO", "DEALERSHIP", "SUPPLIER_NAME", "SINCE", "PROD_GROUP", "PURCHASES"
		FROM :ST_HISTORY;
		COMMIT;
		
		-- 9) Insert into Events Table:
		EVENT_NO := 1;
		EVENT_CODE := 1;
		REMARK := 'Created by Distributor - ' || :USER_ID;
		
		INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_EVENTS_COMMENTS" 
		(
			"OB_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "USER_ROLE", "REMARK", "CREATION_DATE"
		)
		SELECT 	:OB_NO, :EVENT_NO, :EVENT_CODE, "USER_ID", "USER_NAME", "USER_ROLE", :REMARK, :CURR_TIMESTAMP
		FROM :ST_EVENTS;
		
		
		UPDATE "TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_REGISTRATION" 
		SET "OTP" = null
		WHERE "EMAIL" = :USER_ID;
		
		-- INSERT INTO "TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER" 
		-- ("USER_ID", "NAME", "USER_TYPE", "USER_ROLE", "EMAIL", "PHONE_NO", "ADDRESS")
		-- VALUES 	
		-- (:USER_ID, :DIST_NAME, 'E', 'DIST', :USER_ID, :DIST_PHONE, :DIST_ADDR);
		COMMIT;
		
	OUT_SUCCESS := 'Onboarding Request Created : '  || :OB_NO;
  
END