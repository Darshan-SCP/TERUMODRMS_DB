PROCEDURE "TERUMODRMS_DB.db.Procedure::TERUMO_MATRIX_MASTER"(
	IN USER_ROLE NVARCHAR(50),
	IN APPROVER_LEVEL INTEGER,
	IN APP_NAME NVARCHAR(20),
	IN TABLE_NAME NVARCHAR(150),
	IN NEW_USER_ROLE NVARCHAR(50),
	IN NEW_APPROVER_LEVEL INTEGER,
	IN ACTION VARCHAR(10),
	OUT OUT_SUCCESS NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
	DECLARE ROLE_EXISTS INTEGER;
	DECLARE LV_SQL NVARCHAR(1000) DEFAULT '';
	DECLARE LV_ROLE_DESC NVARCHAR(50);
   
	IF :APP_NAME = 'RGA' OR :APP_NAME = 'CLAIMS'
	THEN
   
		IF :ACTION = 'EDIT' OR :ACTION = 'DELETE'
		THEN
			LV_SQL = 'SELECT COUNT(*) FROM '||:TABLE_NAME||' WHERE USER_ROLE = :USER_ROLE  AND APPROVER_LEVEL = :APPROVER_LEVEL';
							
			EXEC :LV_SQL INTO ROLE_EXISTS USING :USER_ROLE, :APPROVER_LEVEL;
				
			OUT_SUCCESS := 'ROLE_EXISTS: ' || ROLE_EXISTS;
		END IF;
	   
	
		IF :ACTION = 'CREATE'
		THEN
			LV_SQL = 'INSERT INTO '||:TABLE_NAME|| '(USER_ROLE, APPROVER_LEVEL)'
					||' VALUES(:USER_ROLE, :APPROVER_LEVEL)';
			
			EXEC :LV_SQL USING :USER_ROLE, :APPROVER_LEVEL;
			COMMIT;
			
			OUT_SUCCESS := :USER_ROLE||' added at Approval Level: '||:APPROVER_LEVEL;
			-- OUT_SUCCESS := 'Matrix Level: '||:APPROVER_LEVEL||' Created Successfully as '||:USER_ROLE;
			
			
		ELSEIF :ACTION = 'EDIT' AND ROLE_EXISTS = 1
		THEN
			LV_SQL = 'UPDATE '||:TABLE_NAME
					||' SET USER_ROLE = :NEW_USER_ROLE, APPROVER_LEVEL = :NEW_APPROVER_LEVEL'
					||' WHERE USER_ROLE = :USER_ROLE  AND APPROVER_LEVEL = :APPROVER_LEVEL';
					
			EXEC :LV_SQL USING :NEW_USER_ROLE, :NEW_APPROVER_LEVEL, :USER_ROLE, :APPROVER_LEVEL;
			COMMIT;
			
			OUT_SUCCESS := :NEW_USER_ROLE || ' updated at Approval Level: '||:APPROVER_LEVEL;
			
			
		ELSEIF :ACTION = 'DELETE'  AND ROLE_EXISTS = 1
		THEN	
			LV_SQL = 'DELETE FROM '||:TABLE_NAME||' WHERE USER_ROLE = :USER_ROLE  AND APPROVER_LEVEL = :APPROVER_LEVEL';
			
			EXEC :LV_SQL USING :USER_ROLE, :APPROVER_LEVEL;
			COMMIT;
			
			OUT_SUCCESS := :USER_ROLE||' deleted at Approval Level: '||:APPROVER_LEVEL;
			
		END IF;
	
	----------------------------------------------------------------------------------------------------
	ELSEIF :APP_NAME = 'PAYMENTS' --Only for Payments module as it has APPROVER spelling as "APRROVER"
	THEN
		DECLARE APRROVER_LEVEL INTEGER;
		APRROVER_LEVEL := :APPROVER_LEVEL;
		
		IF :ACTION = 'EDIT' OR :ACTION = 'DELETE'
		THEN
			LV_SQL = 'SELECT COUNT(*) FROM '||:TABLE_NAME||' WHERE USER_ROLE = :USER_ROLE  AND APRROVER_LEVEL = :APRROVER_LEVEL';
							
			EXEC :LV_SQL INTO ROLE_EXISTS USING :USER_ROLE, :APRROVER_LEVEL;
				
			OUT_SUCCESS := 'ROLE_EXISTS: ' || ROLE_EXISTS;
		END IF;
		
		IF :ACTION = 'CREATE'
		THEN
		LV_SQL = 'INSERT INTO '||:TABLE_NAME|| '(USER_ROLE, APRROVER_LEVEL)'
				||' VALUES(:USER_ROLE, :APRROVER_LEVEL)';
		
		EXEC :LV_SQL USING :USER_ROLE, :APRROVER_LEVEL;
		COMMIT;
		
		OUT_SUCCESS := :USER_ROLE||' added at Approval Level: '||:APRROVER_LEVEL;
		
		ELSEIF :ACTION = 'EDIT' AND ROLE_EXISTS = 1
		THEN
			LV_SQL = 'UPDATE '||:TABLE_NAME
					||' SET USER_ROLE = :NEW_USER_ROLE, APRROVER_LEVEL = :NEW_APPROVER_LEVEL'
					||' WHERE USER_ROLE = :USER_ROLE  AND APRROVER_LEVEL = :APRROVER_LEVEL';
					
			EXEC :LV_SQL USING :NEW_USER_ROLE, :NEW_APPROVER_LEVEL, :USER_ROLE, :APRROVER_LEVEL;
			COMMIT;
			
			OUT_SUCCESS := :NEW_USER_ROLE || ' updated at Approval Level: '||:APRROVER_LEVEL;
			
			
		ELSEIF :ACTION = 'DELETE'  AND ROLE_EXISTS = 1
		THEN	
			LV_SQL = 'DELETE FROM '||:TABLE_NAME||' WHERE USER_ROLE = :USER_ROLE  AND APRROVER_LEVEL = :APRROVER_LEVEL';
			
			EXEC :LV_SQL USING :USER_ROLE, :APRROVER_LEVEL;
			COMMIT;
			
			OUT_SUCCESS := :USER_ROLE||' deleted at Approval Level: '||:APRROVER_LEVEL;
			
		END IF;
	-----------------------------------------------------------------------------------------------------
	ELSE
		OUT_SUCCESS := 'Invalid Matrix App';
	END IF;
		
END