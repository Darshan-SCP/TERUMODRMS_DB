$.response.contentType = "application/json";
$.response.status = 200;
$.response.contentType = "text/plain";

function responseInfo(setBody, contentType, status) {
	if (setBody.message !== undefined) {
		$.response.setBody(setBody.message);
	} else {
		$.response.setBody(setBody);
	}
	$.response.contentType = contentType;
	$.response.status = status;
}

function samplePayload() {
	var payload = {
		"VALUE": {
			"OB_NO": 0,
			"STEP_NO": 0,
			"SALES_ASSOCIATE_ID": "kaustubh.d@intellectbizware.com",
			"MAIN": [{
				"PROPOSAL_DATE": "2021-04-12T00:00:00",
				"ENTITY_NAME": "Quick Pharama Distributors",
				"BUSINESS_NATURE": "Partnership",
				"CONTACT_NAME": "Raja Singh",
				"CONTACT_MOBILE": "7789537654",
				"CONTACT_EMAIL": "raja.s@gmail.com",
				"REGISTERED_ADDR": "REG_A",
				"OFFICE_ADDR": "OFF_A",
				"SHIP_TO_ADDR": "SHP_A",
				"WAREHOUSE_ADDR": "WH_A",
				"ESTABLISMENT_DATE": "2021-02-17T00:00:00",
				"TERR_HOSP_ACC": "Test",
				"SELLING_POINT": "Quality Distributors",
				"TOT_PERM_EMP": 1000,
				"TOT_TEMP_EMP": 500,
				"NOE_ACC": 10,
				"NOE_ADM": 10,
				"NOE_HR": 10,
				"NOE_QA": 1,
				"NOE_MAN": 10,
				"NOE_SAL": 10,
				"NOE_SEC": 10,
				"NOE_ANY": 10
			}],
			"ADDRESS": [{
				"ADDR_CODE": "OFF_A",
				"STREETNO": "45",
				"STREET1": "Kukkatpally",
				"STREET2": "Kukkatpally",
				"CITY": "Hyderabad",
				"STATE": "TS",
				"COUNTRY": "IN",
				"PINCODE": "567893"
			}, {
				"ADDR_CODE": "SHP_A",
				"STREETNO": "46",
				"STREET1": "Banjara Hills",
				"STREET2": "Banjara Hills",
				"CITY": "Hyderabad",
				"STATE": "TS",
				"COUNTRY": "IN",
				"PINCODE": "567894"
			}, {
				"ADDR_CODE": "REG_A",
				"STREETNO": "37",
				"STREET1": "MVP Colony",
				"STREET2": "MVP Colony",
				"CITY": "Vizag",
				"STATE": "AP",
				"COUNTRY": "IN",
				"PINCODE": "452001"
			}, {
				"ADDR_CODE": "WH_A",
				"STREETNO": "38",
				"STREET1": "Zp Colony",
				"STREET2": "ZP Colony",
				"CITY": "Vizag",
				"STATE": "AP",
				"COUNTRY": "IN",
				"PINCODE": "452002"
			}],
			"BRANCH": [{
				"LOC_TYPE": "BR",
				"BR_WH_NO": 1,
				"CONTACT_NO": "7789674532",
				"EMAIL_ID": "raja.s@gmail.com",
				"ADDR_CODE": "BRH_A",
				"STREETNO": "45",
				"STREET1": "Dombiveli",
				"STREET2": "Dombiveli",
				"CITY": "Mumbai",
				"STATE": "MH",
				"COUNTRY": "IN",
				"PINCODE": "456785",
				"CONCERN_TYPE": "Branch",
				"INFRA_DETAIL": null,
				"TEMP_DETAIL": null,
				"PROPERTY_TYPE": null,
				"ON_LEASE": null,
				"ATTACH_CODE": null,
				"FILE_NAME": null,
				"FILE_TYPE": null,
				"FILE_MIMETYPE": null,
				"FILE_CONTENT": null
			}],
			"WAREHOUSE": [{
				"LOC_TYPE": "WH",
				"BR_WH_NO": 1,
				"CONTACT_NO": "7789654738",
				"EMAIL_ID": "raja.s@gmail.com",
				"ADDR_CODE": "WH_A",
				"STREETNO": "51",
				"STREET1": "CST",
				"STREET2": "CST",
				"CITY": "Mumbai",
				"STATE": "MH",
				"COUNTRY": "IN",
				"PINCODE": "567893",
				"CONCERN_TYPE": null,
				"INFRA_DETAIL": "456*856",
				"TEMP_DETAIL": 34,
				"PROPERTY_TYPE": "Leased",
				"ON_LEASE": "X",
				"ATTACH_CODE": 7,
				"FILE_NAME": "Test (1).docx",
				"FILE_TYPE": "DOC",
				"FILE_MIMETYPE": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
				"FILE_CONTENT": ""
			}],
			"ATTACHMENTS": [{
				"ATTACH_CODE": 4,
				"FILE_NAME": "Test (2).docx",
				"FILE_MIMETYPE": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
				"FILE_CONTENT": "",
				"ATTACH_FIELD": "GST456",
				"FILE_TYPE": "ATTCH"
			}, {
				"ATTACH_CODE": 5,
				"FILE_NAME": "Test (3).docx",
				"FILE_MIMETYPE": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
				"FILE_CONTENT": "",
				"ATTACH_FIELD": "DL7869",
				"FILE_TYPE": "ATTCH"
			}, {
				"ATTACH_CODE": 6,
				"FILE_NAME": "Test (4).docx",
				"FILE_MIMETYPE": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
				"FILE_CONTENT": "",
				"ATTACH_FIELD": "AP567G4",
				"FILE_TYPE": "ATTCH"
			}, {
				"ATTACH_CODE": 8,
				"FILE_NAME": "Test.docx",
				"FILE_MIMETYPE": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
				"FILE_CONTENT": "",
				"ATTACH_FIELD": "",
				"FILE_TYPE": "FORM"
			}],
			"CUSTOMER": [{
				"CUSTOMER_NAME": "Fortis Hospital",
				"YEAR1": 4,
				"YEAR2": 5
			}],
			"BANK": [{
				"BANK_NAME": "SBI",
				"BRANCH": "Hyderabad",
				"FACILTY": "Loan",
				"AMOUNT_LIMIT": 5,
				"ASSO_SINCE": 2017
			}],
			"PROMO_MANG": [{
				"NAME": "Suraj Tomar",
				"QUALIFICATION": "MBA",
				"WORK_EXP": 5,
				"YRS_IN_COMP": 3,
				"DESIGNATION": "Sales Executive",
				"ROLE": "Sales"
			}],
			"HISTORY": [{
				"DEALERSHIP": "Contract",
				"SUPPLIER_NAME": "Lupin Pharma",
				"SINCE": 2016,
				"PROD_GROUP": "TAZUNA",
				"PURCHASES": 100
			}]
		}
	};

	return payload;
}

function samplePayloadUpdateStatus() {
	var payload = {
		"VALUE": {
			"OB_NO": 8000000018,
			"BU_CODE": "1",
			"USER_ID": "kaustubh.d@intellectbizware.com",
			"APPROVER_LEVEL": 1,
			"APPROVER_ROLE": "SA",
			"DIST_RECOMMMEDATION": "",
			"DIST_RELATION": "",
			"SAP_DIST_ID": "",
			"COMMENT": "Approved"
		}
	};

	return payload;
}

function samplePayloadRegister() {
	var payload = {
		"VALUE": {
			"DATA": [{
				"SALES_ASSO_ID": "kaustubh.d@intellectbizware.com",
				"NAME": "Pranay",
				"PHONE": "7780467889",
				"EMAIL": "pranay@gmail.com",
				"OTP": "123456"
			}]
		}
	};

	return payload;
}

function samplePayloadLogin() {
	var payload = {
		"VALUE": {
			"EMAIL": "pranay@gmail.com"
		}
	};

	return payload;
}

function getidForArr(array, propertyName) {
	if (array.length > 0) {
		if (propertyName !== "" && propertyName !== null && propertyName !== undefined) {
			for (var i = 0; i < array.length; i++) {
				array[i].OB_NO = 0;
				array[i][propertyName] = i + 1;
			}
		} else {
			throw "Property Name missing for id's"
		}
	}

	return array;
}

function getNewAttachmentCount(oPayloadValue, CONN) {
	var conn = CONN;
	var sQuery =
		'SELECT  MAX(ATTACH_NO) AS MAX FROM \"TERUMODRMS_1_1\".\"TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ATTACHMENTS\" WHERE OB_NO = ?';
	var aResult = conn.executeQuery(sQuery, oPayloadValue.OB_NO);

	var array = oPayloadValue.ATTACHMENTS
	if (aResult.length > 0) {
		var iLastMax = aResult[0].MAX;

		for (var i = 0; i < array.length; i++) {
			array[i].OB_NO = 0;
			array[i].ATTACH_NO = i + iLastMax + 1;
		}
	}

	return array;
}

function getEventArrForST(oPayloadValue) {
	var eventArr = [{
		"OB_NO": 0,
		"EVENT_NO": 0,
		"USER_ID": oPayloadValue.MAIN[0].CONTACT_EMAIL,
		"USER_NAME": oPayloadValue.MAIN[0].ENTITY_NAME,
		"USER_ROLE": "DIST"
	}];

	return eventArr;
}

function getUserNameAndRole(oPayloadValue, CONN) {
	var conn = CONN;
	var sQuery =
		'SELECT  \"NAME\",	\"USER_ROLE\" FROM \"TERUMODRMS_1_1\".\"TERUMODRMS_DB.db.Tables::TERUMO_USER_MASTER\" WHERE USER_ID = ?';
	var aResult = conn.executeQuery(sQuery, oPayloadValue.USER_ID);

	if (aResult.length > 0) {
		var resultObj = aResult[0];

		var eventArr = [{
			"OB_NO": 0,
			"EVENT_NO": 0,
			"USER_ID": oPayloadValue.USER_ID,
			"USER_NAME": resultObj.NAME,
			"USER_ROLE": resultObj.USER_ROLE,
			"COMMENT": oPayloadValue.COMMENT
		}];
	} else {
		throw "User does not exists";
	}

	return eventArr;
}

function checkIfDraftExists(emailValue, CONN) {
	var conn = CONN;
	var aResult, oCheckObj, aResult;

	oCheckObj = {
		bExists: false,
	};

	sQuery =
		'SELECT  \"OB_NO\", \"SAVED_AS_DRAFT\" FROM \"TERUMODRMS_1_1\".\"TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ONBOARDING\" WHERE CONTACT_EMAIL = ?';
	aResult = conn.executeQuery(sQuery, emailValue);

	if (aResult.length > 0) {
		oCheckObj.bExists = true;
		oCheckObj.iObNo = aResult[0].OB_NO;
		oCheckObj.iDraftStep = aResult[0].SAVED_AS_DRAFT;
	}

	return oCheckObj;
}

function checkIfRegisteredEmail(emailValue, sOTP, CONN) {
	var conn = CONN;
	var oCheckObj, oDraftObj;
	oCheckObj = {
		bExists: false,
		sMessage: "Email id is not registered"
	};
	var sQuery =
		'SELECT  \"REG_NO\", \"SALES_ASSO_ID\", \"OTP\" FROM \"TERUMODRMS_1_1\".\"TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_REGISTRATION\" WHERE EMAIL = ?';
	var aResult = conn.executeQuery(sQuery, emailValue);

	// "Message": oExists.bExists ? "Email Registered" : "Email id is not registered"
	if (aResult.length > 0) {
		if (sOTP === aResult[0].OTP) {
			oCheckObj.bExists = true;
			oCheckObj.SALES_ASSO_ID = aResult[0].SALES_ASSO_ID;
			oCheckObj.sMessage = "Email Verified";
			oCheckObj.iObNo = 0;
			oCheckObj.iDraftStep = 0;

			oDraftObj = checkIfDraftExists(emailValue, conn);
			if (oDraftObj.bExists) {
				oCheckObj.iObNo = oDraftObj.iObNo;
				oCheckObj.iDraftStep = oDraftObj.iDraftStep;
			}

		} else if (aResult[0].OTP === "" || aResult[0].OTP === null || aResult[0].OTP === undefined) {
			oCheckObj.sMessage = "Onboarding process is already complete"
		} else if (sOTP === "" || sOTP === null || sOTP === undefined) {
			oCheckObj.sMessage = "Please Enter OTP"
		} else {
			oCheckObj.sMessage = "Incorrect OTP. Please check again"
		}
	}

	return oCheckObj;
}

function checkUserDetails(oPayloadValue, CONN) {
	var conn = CONN;
	var sQuery =
		'SELECT  \"APPROVER_LEVEL\", \"NEXT_APPROVER\", \"STATUS\" FROM \"TERUMODRMS_1_1\".\"TERUMODRMS_DB.db.Tables::TERUMO_DISTRIBUTOR_ONBOARDING\" WHERE OB_NO = ?'
	var aResult = conn.executeQuery(sQuery, oPayloadValue.OB_NO);

	if (aResult.length > 0) {
		var resultObj = aResult[0];
		// if (oPayloadValue.USER_ID !== resultObj.NEXT_APPROVER) {
		// 	throw "Incorrect Approver";
		// } else 
		if (oPayloadValue.APPROVER_LEVEL !== resultObj.APPROVER_LEVEL) {
			throw "Incorrect Approval Level";
		}

		// else if (oPayloadValue.STATUS !== 6) {
		// 	throw "CR Cannot be Approved";
		// } else 

	} else {
		throw "CR does not exists";
	}

	return true;
}

//Implementation of POST call
function fnHandlePost() {
	var sAction = $.request.parameters.get('ACTION');
	var oPayload = JSON.parse($.request.body.asString());

	// var sAction = "CREATE";
	// var sAction = "REGISTER";
	// var sAction = "LOGIN";
	// var oPayload = samplePayload();
	// var oPayload = samplePayloadRegister();
	// var oPayload = samplePayloadLogin();

	var conn, execProcedure, Result;

	if (sAction === "REGISTER") {
		conn = $.hdb.getConnection();

		try {

			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_REGISTER');
			var sDistEmail = oPayload.VALUE.DATA[0].EMAIL;
			var aRegisterObj = oPayload.VALUE.DATA;

			Result = execProcedure(sDistEmail, aRegisterObj);
			responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "LOGIN") {
		conn = $.hdb.getConnection();

		try {

			var sUserId = oPayload.VALUE.EMAIL;
			var sOTP = oPayload.VALUE.OTP;
			var oExists = checkIfRegisteredEmail(sUserId, sOTP, conn);

			var oResponseObj = {
				"loginExists": oExists.bExists,
				"Message": oExists.sMessage
					// "Message": oExists.bExists ? "Email Registered" : "Email id is not registered"
			}

			if (oExists.bExists) {
				oResponseObj.SalesID = oExists.SALES_ASSO_ID;
				oResponseObj.Draft_ObNo = oExists.iObNo;
				oResponseObj.Draft_Step = oExists.iDraftStep;
			}

			responseInfo(JSON.stringify(oResponseObj), "text/plain", 200);
			// responseInfo(JSON.stringify(oResponseObj), "text/plain", bExists ? 200 : 400);
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "DRAFT") {
		conn = $.hdb.getConnection();

		try {
			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_DRAFT');
			var iObNo = oPayload.VALUE.OB_NO;
			var iStep = oPayload.VALUE.STEP_NO;
			var iLastDraft = oPayload.VALUE.LAST_DRAFT_SUCCESS;
			var sSalesID = oPayload.VALUE.SALES_ASSOCIATE_ID;
			var aMainObj = oPayload.VALUE.MAIN;
			if (aMainObj.length > 0) {
				aMainObj[0].OB_NO = 0;
			} else {
				throw "Invalid Payload";
			}
			var sUserId = oPayload.VALUE.MAIN[0].CONTACT_EMAIL;
			var aAddressObj = getidForArr(oPayload.VALUE.ADDRESS, "ADDR_NO");

			var aBranchObj = getidForArr(oPayload.VALUE.BRANCH, "LOC_NO");
			var aWHObj = getidForArr(oPayload.VALUE.WAREHOUSE, "LOC_NO");

			var aBR_WHObj = [...aBranchObj, ...aWHObj];

			var aAttachObj = getidForArr(oPayload.VALUE.ATTACHMENTS, "ATTACH_NO");
			var aCustomerObj = getidForArr(oPayload.VALUE.CUSTOMER, "CUST_NO");
			var aBankObj = getidForArr(oPayload.VALUE.BANK, "BANK_NO");
			var aPromoMngObj = getidForArr(oPayload.VALUE.PROMO_MANG, "SR_NO");
			var aHistoryObj = getidForArr(oPayload.VALUE.HISTORY, "SR_NO");

			var aEventObj = getEventArrForST(oPayload.VALUE);

			Result = execProcedure(iObNo, iStep, iLastDraft, sUserId, sSalesID, aMainObj, aAddressObj, aBR_WHObj, aAttachObj,
				aCustomerObj, aBankObj, aPromoMngObj, aHistoryObj, aEventObj);

			var responseObj = {
				Draft_Success: Result.OUT_SUCCESS !== null ? true : false,
				OB_NO: Result.OUT_SUCCESS !== null ? Result.OUT_SUCCESS : 0,
				Draft_Message: Result.OUT_SUCCESS !== null ? "Draft saved successfully" : "Draft saving failed!"
			}
			responseInfo(JSON.stringify(responseObj), "text/plain", 200);
		} catch (e) {
			conn.rollback();
			responseInfo(e, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "CREATE") {
		conn = $.hdb.getConnection();

		try {
			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_CREATE');
			var iObNo = oPayload.VALUE.OB_NO;
			var iStep = oPayload.VALUE.STEP_NO;
			var sSalesID = oPayload.VALUE.SALES_ASSOCIATE_ID;
			var aMainObj = oPayload.VALUE.MAIN;
			if (aMainObj.length > 0) {
				aMainObj[0].OB_NO = 0;
			} else {
				throw "Invalid Payload";
			}
			
			var sUserId = oPayload.VALUE.MAIN[0].CONTACT_EMAIL;

			//Distributor details for User Master
			// var sDistName = oPayload.VALUE.MAIN[0].ENTITY_NAME;
			// var sDistPhone = oPayload.VALUE.MAIN[0].CONTACT_MOBILE;
			// var sDistAddr = oPayload.VALUE.ADDRESS[0].STREETNO + ", " +
			// 	oPayload.VALUE.ADDRESS[0].STREET1 + ", " +
			// 	oPayload.VALUE.ADDRESS[0].STREET2 + ", " +
			// 	oPayload.VALUE.ADDRESS[0].CITY + ", " +
			// 	oPayload.VALUE.ADDRESS[0].STATE + " - " +
			// 	oPayload.VALUE.ADDRESS[0].PINCODE + ", " +
			// 	oPayload.VALUE.ADDRESS[0].COUNTRY;

			var aAddressObj = getidForArr(oPayload.VALUE.ADDRESS, "ADDR_NO");
			var aBranchObj = getidForArr(oPayload.VALUE.BRANCH, "LOC_NO");
			var aWHObj = getidForArr(oPayload.VALUE.WAREHOUSE, "LOC_NO");

			var aBR_WHObj = [...aBranchObj, ...aWHObj];
			var aAttachObj = getidForArr(oPayload.VALUE.ATTACHMENTS, "ATTACH_NO");
			var aCustomerObj = getidForArr(oPayload.VALUE.CUSTOMER, "CUST_NO");
			var aBankObj = getidForArr(oPayload.VALUE.BANK, "BANK_NO");
			var aPromoMngObj = getidForArr(oPayload.VALUE.PROMO_MANG, "SR_NO");
			var aHistoryObj = getidForArr(oPayload.VALUE.HISTORY, "SR_NO");

			var aEventObj = getEventArrForST(oPayload.VALUE);

			// Result = execProcedure(iObNo, iStep, sUserId, sSalesID, sDistName, sDistPhone, sDistAddr, aMainObj, 
			Result = execProcedure(iObNo, iStep, sUserId, sSalesID, aMainObj, aAddressObj, aBR_WHObj, 
						aAttachObj, aCustomerObj, aBankObj, aPromoMngObj,aHistoryObj, aEventObj);
			responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
		} catch (e) {
			conn.rollback();
			responseInfo(e, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "APPROVE") {
		conn = $.hdb.getConnection();

		try {

			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_APPROVE_SHORT');
			var iObNo = oPayload.VALUE.OB_NO;
			var sBuCode = oPayload.VALUE.BU_CODE;
			var sUserId = oPayload.VALUE.USER_ID;
			var sLevel = oPayload.VALUE.APPROVER_LEVEL;
			var sRole = oPayload.VALUE.APPROVER_ROLE;
			var sRecommend = oPayload.VALUE.DIST_RECOMMMEDATION;
			var sRelation = oPayload.VALUE.DIST_RELATION;
			var sSAPReturnOrder = oPayload.VALUE.SAP_RETURN_ORDER;
			sSAPReturnOrder = '30000089'; // Comment line after on premise service is integrated

			if (checkUserDetails(oPayload.VALUE, conn)) {
				var aTargetObj = oPayload.VALUE.TARGET;
				var aPriceObj = oPayload.VALUE.PRICING;
				var aAttachObj = getNewAttachmentCount(oPayload.VALUE, conn);
				var aEventObj = getUserNameAndRole(oPayload.VALUE, conn);

				Result = execProcedure(iObNo, sBuCode, sUserId, sLevel, sRole, sRecommend, sRelation, sSAPReturnOrder, 
						aTargetObj, aPriceObj, aAttachObj, aEventObj);
				responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
			}
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "SENDBACK") {
		conn = $.hdb.getConnection();

		try {

			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_SENDBACK');
			var iObNo = oPayload.VALUE.OB_NO;
			var sBuCode = oPayload.VALUE.BU_CODE;
			var sUserId = oPayload.VALUE.USER_ID;
			var sLevel = oPayload.VALUE.APPROVER_LEVEL;
			var sRole = oPayload.VALUE.APPROVER_ROLE;

			if (checkUserDetails(oPayload.VALUE, conn)) {
				var aEventObj = getUserNameAndRole(oPayload.VALUE, conn);

				Result = execProcedure(iObNo, sBuCode, sUserId, sLevel, sRole, aEventObj);
				responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
			}
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "RESEND") {
		conn = $.hdb.getConnection();

		try {

			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_RESEND');
			var iObNo = oPayload.VALUE.OB_NO;
			var sBuCode = oPayload.VALUE.BU_CODE;
			var sUserId = oPayload.VALUE.USER_ID;
			var sLevel = oPayload.VALUE.APPROVER_LEVEL;
			var sRole = oPayload.VALUE.APPROVER_ROLE;

			if (checkUserDetails(oPayload.VALUE, conn)) {
				var aTargetObj = oPayload.VALUE.TARGET;
				var aPriceObj = oPayload.VALUE.PRICING;
				var aEventObj = getUserNameAndRole(oPayload.VALUE, conn);

				Result = execProcedure(iObNo, sBuCode, sUserId, sLevel, sRole, aTargetObj, aPriceObj, aEventObj);
				responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
			}
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else if (sAction === "REJECT") {
		conn = $.hdb.getConnection();

		try {

			execProcedure = conn.loadProcedure('TERUMODRMS_DB.db.Procedure::TERUMO_ONBOARDING_REJECT');
			var iObNo = oPayload.VALUE.OB_NO;
			var sBuCode = oPayload.VALUE.BU_CODE;
			var sUserId = oPayload.VALUE.USER_ID;
			var sLevel = oPayload.VALUE.APPROVER_LEVEL;
			var sRole = oPayload.VALUE.APPROVER_ROLE;

			if (checkUserDetails(oPayload.VALUE, conn)) {
				var aEventObj = getUserNameAndRole(oPayload.VALUE, conn);

				Result = execProcedure(iObNo, sBuCode, sUserId, sLevel, sRole, aEventObj);
				responseInfo(JSON.stringify(Result.OUT_SUCCESS), "text/plain", 200);
			}
		} catch (err) {
			conn.rollback();
			responseInfo(err, "text/plain", 400);
		} finally {
			conn.close();
		}

	} else {
		var errorObj = "Undefined Action";
		responseInfo(JSON.stringify(errorObj), "text/plain", 400);
	}

}

//Implementation of GET call
function fnHandleGet() {
	return "Method not supported while posting data : GET";
}

try {
	switch ($.request.method) {
		//Handle your GET calls here
	case $.net.http.GET:
		// fnHandlePost();
		$.response.setBody(JSON.stringify(fnHandleGet()));
		break;
		//Handle your POST calls here
	case $.net.http.POST:
		fnHandlePost();
		// $.response.setBody(JSON.stringify(fnHandlePost()));
		break;
	default:
		break;
	}
} catch (err) {
	$.response.setBody("Onboarding Failed: " + err.toString());
}